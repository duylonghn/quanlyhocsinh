document.addEventListener("DOMContentLoaded", function () {
    const fileInput = document.getElementById("upload-results");
    const fileUploadText = document.querySelector(".file-upload-text");
    const tableBody = document.querySelector(".info-table tbody");
    const cancelButton = document.getElementById("cancel-info");
    const downloadBtn = document.querySelector(".download-btn"); // N√∫t t·∫£i file m·∫´u
    const saveButton = document.getElementById("save-info");

    if (!fileInput || !fileUploadText || !tableBody) {
        console.error("L·ªói: Kh√¥ng t√¨m th·∫•y m·ªôt trong c√°c ph·∫ßn t·ª≠ HTML.");
        return;
    }

    // üìÇ X·ª≠ l√Ω khi t·∫£i file Excel l√™n
    fileInput.addEventListener("change", function (event) {
        const file = event.target.files[0];
        if (!file) return;

        // Ki·ªÉm tra ƒë·ªãnh d·∫°ng file
        if (!file.name.endsWith(".xlsx")) {
            alert("Vui l√≤ng ch·ªçn file c√≥ ƒë·ªãnh d·∫°ng .xlsx!");
            fileInput.value = "";
            return;
        }

        fileUploadText.textContent = `üìÅ ${file.name}`;

        // ƒê·ªçc file Excel
        const reader = new FileReader();
        reader.readAsArrayBuffer(file);

        reader.onload = function (e) {
            const data = new Uint8Array(e.target.result);
            const workbook = XLSX.read(data, { type: "array" });
            const sheetName = workbook.SheetNames[0];
            const sheet = workbook.Sheets[sheetName];

            // Chuy·ªÉn d·ªØ li·ªáu t·ª´ sheet th√†nh JSON
            const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });

            // X√≥a d·ªØ li·ªáu c≈© tr√™n b·∫£ng
            tableBody.innerHTML = "";

            // L·∫•y d·ªØ li·ªáu t·ª´ h√†ng th·ª© 3 tr·ªü ƒëi (h√†ng 1 l√† ti√™u ƒë·ªÅ, h√†ng 2 l√† m√¥ t·∫£)
            for (let i = 2; i < jsonData.length; i++) {
                const row = jsonData[i];
                if (row.length === 0) continue; // B·ªè qua d√≤ng tr·ªëng

                // üìù T·∫°o d√≤ng m·ªõi trong b·∫£ng
                const tr = document.createElement("tr");
                tr.innerHTML = `
                    <td>${row[0] || ""}</td>   <!-- M√£ h·ªçc sinh -->
                    <td>${row[1] || ""}</td>   <!-- H·ªç t√™n -->
                    <td>${row[2] || ""}</td>   <!-- Gi·ªõi t√≠nh -->
                    <td>${row[3] || ""}</td>   <!-- L·ªõp -->
                    <td>${row[4] || ""}</td>   <!-- Kh√≥a -->
                    <td>${row[5] || ""}</td>   <!-- Tr∆∞·ªùng -->
                    <td>${row[6] || ""}</td>   <!-- S·ªë ƒëi·ªán tho·∫°i -->
                    <td>${row[7] || ""}</td>   <!-- Email -->
                    <td>${row[8] || ""}</td>   <!-- CCCD -->
                    <td>${row[9] || ""}</td>   <!-- D√¢n t·ªôc -->
                    <td>${row[10] || ""}</td>  <!-- T√¥n gi√°o -->
                    <td>${row[11] || ""}</td>  <!-- Qu√™ qu√°n -->
                    <td>${row[12] || ""}</td>  <!-- ƒê·ªãa ch·ªâ -->
                    <td>${row[13] || ""}</td>  <!-- H·ªç t√™n ph·ª• huynh -->
                    <td>${row[14] || ""}</td>  <!-- S·ªë ƒëi·ªán tho·∫°i ph·ª• huynh -->
                    <td>${row[15] || ""}</td>  <!-- Quan h·ªá -->
                    <td><button class="delete-btn">üóë X√≥a</button></td>
                `;

                tableBody.appendChild(tr);
            }
        };
    });

    // üóë X√≥a d√≤ng trong b·∫£ng
    tableBody.addEventListener("click", function (event) {
        if (event.target.classList.contains("delete-btn")) {
            event.target.closest("tr").remove();
        }
    });

    // üî• X√≥a to√†n b·ªô d·ªØ li·ªáu khi b·∫•m n√∫t "H·ªßy"
    cancelButton.addEventListener("click", function () {
        if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t·∫•t c·∫£ d·ªØ li·ªáu?")) {
            tableBody.innerHTML = "";  // X√≥a to√†n b·ªô n·ªôi dung trong b·∫£ng
            fileUploadText.textContent = "Ch·ªçn t·ªáp"; // Reset l·∫°i ch·ªØ ch·ªçn file
            fileInput.value = ""; // X√≥a file ƒë√£ ch·ªçn
        }
    });

    // üì• T·∫£i file m·∫´u
    if (downloadBtn) {
        downloadBtn.addEventListener("click", function () {
            const fileName = downloadBtn.getAttribute("data-file");
            if (fileName) {
                window.location.href = `/../../../action/download-file.php?file=${encodeURIComponent(fileName)}`;
            } else {
                alert("L·ªói: Kh√¥ng t√¨m th·∫•y file m·∫´u!");
            }
        });
    }

    // üìù L∆∞u d·ªØ li·ªáu l√™n server
    saveButton.addEventListener("click", function () {
        const rows = tableBody.querySelectorAll("tr");
        if (rows.length === 0) {
            alert("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l∆∞u!");
            return;
        }

        const studentData = [];

        rows.forEach(row => {
            const cells = row.querySelectorAll("td");
            const data = {
                msv: cells[0]?.textContent.trim() || "",
                fullname: cells[1]?.textContent.trim() || "",
                sex: cells[2]?.textContent.trim() || "",
                class_id: cells[3]?.textContent.trim() || "",
                course: cells[4]?.textContent.trim() || "",
                school: cells[5]?.textContent.trim() || "",
                phone: cells[6]?.textContent.trim() || "",
                email: cells[7]?.textContent.trim() || "",
                cccd: cells[8]?.textContent.trim() || "",
                nation: cells[9]?.textContent.trim() || "",
                religion: cells[10]?.textContent.trim() || "",
                birthplace: cells[11]?.textContent.trim() || "",
                address: cells[12]?.textContent.trim() || "",
                parent_name: cells[13]?.textContent.trim() || "",
                parent_phone: cells[14]?.textContent.trim() || "",
                relationship: cells[15]?.textContent.trim() || ""
            };

            studentData.push(data);
        });

        // G·ª≠i d·ªØ li·ªáu l√™n server
        fetch("/../../action/inputdata/students.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(studentData)
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                alert("‚úÖ ƒê√£ l∆∞u th√†nh c√¥ng!");
                // C√≥ th·ªÉ l√†m tr·ªëng b·∫£ng ho·∫∑c reset n·∫øu c·∫ßn
            } else {
                alert("‚ùå L·ªói: " + (result.message || "Kh√¥ng x√°c ƒë·ªãnh"));
            }
        })
        .catch(error => {
            console.error("L·ªói khi g·ª≠i d·ªØ li·ªáu:", error);
            alert("‚ùå G·ª≠i d·ªØ li·ªáu th·∫•t b·∫°i.");
        });
    });
});

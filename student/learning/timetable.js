document.addEventListener("DOMContentLoaded", function () {
    // üîÑ L·∫•y userId t·ª´ session
    fetch("/action/get-session.php")
        .then(response => response.json())
        .then(sessionData => {
            if (!sessionData.user_id) {
                console.error("‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y ID trong session.");
                return;
            }

            const userId = sessionData.user_id; // L·∫•y user_id t·ª´ session

            // H√†m ƒë·ªÉ l·∫•y th√¥ng tin th·ªùi kh√≥a bi·ªÉu
            function fetchSchedule(semesterId) {
                return fetch(`/database/timetable-students.php?id=${userId}&semesters_id=${semesterId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (!data || typeof data !== "object" || !data.schedule || !Array.isArray(data.schedule)) {
                            console.error('‚ö†Ô∏è D·ªØ li·ªáu th·ªùi kh√≥a bi·ªÉu kh√¥ng h·ª£p l·ªá ho·∫∑c r·ªóng.');
                            return null;
                        }
                        return data;
                    })
                    .catch(error => {
                        console.error('‚ùå L·ªói khi t·∫£i th·ªùi kh√≥a bi·ªÉu:', error);
                        return null;
                    });
            }

            // H√†m t·∫°o giao di·ªán l·ªãch tr·ªëng
            function createSchedule() {
                const dateHeader = document.getElementById("date-header");
                const sangContainer = document.getElementById("sang");
                const chieuContainer = document.getElementById("chieu");

                if (!dateHeader || !sangContainer || !chieuContainer) {
                    console.error("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ l·ªãch h·ªçc.");
                    return;
                }

                dateHeader.innerHTML = "";
                sangContainer.innerHTML = "";
                chieuContainer.innerHTML = "";

                const headerRow = document.createElement("div");
                headerRow.classList.add("row");

                const periodHeaderCell = document.createElement("div");
                periodHeaderCell.classList.add("cell", "tiethoc");
                periodHeaderCell.textContent = "Ti·∫øt h·ªçc";
                headerRow.appendChild(periodHeaderCell);

                const daysOfWeek = ["Th·ª© 2", "Th·ª© 3", "Th·ª© 4", "Th·ª© 5", "Th·ª© 6", "Th·ª© 7"];
                daysOfWeek.forEach(day => {
                    const dayHeaderCell = document.createElement("div");
                    dayHeaderCell.classList.add("cell", "header");
                    dayHeaderCell.textContent = day;
                    headerRow.appendChild(dayHeaderCell);
                });

                dateHeader.appendChild(headerRow);

                const periods = ["Ti·∫øt 1", "Ti·∫øt 2", "Ti·∫øt 3", "Ti·∫øt 4", "Ti·∫øt 5", "Ti·∫øt 6", "Ti·∫øt 7", "Ti·∫øt 8", "Ti·∫øt 9", "Ti·∫øt 10"];
                periods.forEach((period, index) => {
                    const periodRow = document.createElement("div");
                    periodRow.classList.add("row");

                    const periodCell = document.createElement("div");
                    periodCell.classList.add("cell", "tiet");
                    periodCell.textContent = period;
                    periodRow.appendChild(periodCell);

                    daysOfWeek.forEach((_, dayIndex) => {
                        const cell = document.createElement("div");
                        cell.classList.add("cell", "body");
                        cell.id = `period${index + 1}-day${dayIndex + 1}`;
                        cell.style.pointerEvents = "none";
                        periodRow.appendChild(cell);
                    });

                    if (index < 5) {
                        sangContainer.appendChild(periodRow);
                    } else {
                        chieuContainer.appendChild(periodRow);
                    }
                });
            }

            // H√†m hi·ªÉn th·ªã th·ªùi kh√≥a bi·ªÉu
            function displaySchedule(schedule) {
                // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi hi·ªÉn th·ªã l·ªãch m·ªõi
                document.querySelectorAll(".body").forEach(cell => {
                    cell.innerHTML = "";
                    cell.classList.remove("has-data");
                    cell.style.pointerEvents = "none";
                });

                const dayMapping = { "Th·ª© 2": 1, "Th·ª© 3": 2, "Th·ª© 4": 3, "Th·ª© 5": 4, "Th·ª© 6": 5, "Th·ª© 7": 6 };

                schedule.forEach(entry => {
                    if (!entry.subject || !entry.day_of_week || !entry.period) return;

                    const period = entry.period;
                    const day = dayMapping[entry.day_of_week];

                    if (day && period) {
                        const cellId = `period${period}-day${day}`;
                        const cell = document.getElementById(cellId);
                        if (cell) {
                            cell.innerHTML = `${entry.subject}<br>${entry.teacher_name ?? "Kh√¥ng c√≥ GV"}`;
                            cell.classList.add("has-data");
                            cell.style.pointerEvents = "auto";
                        }
                    }
                });
            }

            // T·∫°o l·ªãch tr·ªëng ban ƒë·∫ßu
            createSchedule();

            // H√†m l·∫•y `semester_id` hi·ªán t·∫°i
            function getSemesterId() {
                const currentDate = new Date();
                const currentMonth = currentDate.getMonth() + 1;
                const currentYear = currentDate.getFullYear();
                const lastTwoDigitsCurrentYear = currentYear.toString().slice(-2);
                const lastTwoDigitsNextYear = (currentYear + 1).toString().slice(-2);

                if (currentMonth >= 8 && currentMonth <= 12) {
                    return `1_${lastTwoDigitsCurrentYear}_${lastTwoDigitsNextYear}`;
                } else {
                    const lastTwoDigitsPreviousYear = (currentYear - 1).toString().slice(-2);
                    return `2_${lastTwoDigitsPreviousYear}_${lastTwoDigitsCurrentYear}`;
                }
            }

            // L·∫•y `semester_id` m·∫∑c ƒë·ªãnh
            const defaultSemesterId = getSemesterId();

            // L·∫•y danh s√°ch k·ª≥ h·ªçc
            const semesterSelect = document.getElementById("semester");
            fetch(`/database/get-semester.php`)
                .then(response => response.json())
                .then(data => {
                    if (data && Array.isArray(data) && data.length > 0) {
                        data.forEach(semester => {
                            const option = document.createElement("option");
                            option.value = semester.id;
                            option.textContent = semester.name;
                            semesterSelect.appendChild(option);
                        });

                        // Ch·ªçn k·ª≥ h·ªçc m·∫∑c ƒë·ªãnh
                        semesterSelect.value = defaultSemesterId;

                        // T·∫£i th·ªùi kh√≥a bi·ªÉu cho k·ª≥ h·ªçc m·∫∑c ƒë·ªãnh
                        fetchSchedule(defaultSemesterId).then(data => {
                            if (data) {
                                displaySchedule(data.schedule);
                            } else {
                                console.log("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu th·ªùi kh√≥a bi·ªÉu.");
                            }
                        });
                    } else {
                        console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y danh s√°ch k·ª≥ h·ªçc.");
                    }
                })
                .catch(() => console.error("‚ùå L·ªói khi t·∫£i danh s√°ch k·ª≥ h·ªçc."));

            // X·ª≠ l√Ω s·ª± ki·ªán thay ƒë·ªïi k·ª≥ h·ªçc
            semesterSelect.addEventListener("change", function () {
                const semesterId = semesterSelect.value;
                if (semesterId) {
                    displaySchedule([]); // X√≥a l·ªãch c≈©
                    fetchSchedule(semesterId).then(data => {
                        if (data) {
                            displaySchedule(data.schedule);
                        }
                    });
                }
            });

        })
        .catch(() => console.error("‚ùå L·ªói khi l·∫•y user_id t·ª´ session."));
});
